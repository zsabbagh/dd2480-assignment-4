.pkg: install_requires> python -I -m pip install 'setuptools>=40.8.0' wheel
.pkg: _optional_hooks> python /home/glacier/repos/loguru/venv/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
.pkg: get_requires_for_build_sdist> python /home/glacier/repos/loguru/venv/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
.pkg: prepare_metadata_for_build_wheel> python /home/glacier/repos/loguru/venv/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
.pkg: build_sdist> python /home/glacier/repos/loguru/venv/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
lint: install_package_deps> python -I -m pip install 'Sphinx==5.3.0; python_version >= "3.8"' 'aiocontextvars>=0.2.0; python_version < "3.7"' 'colorama==0.4.5; python_version < "3.8"' 'colorama==0.4.6; python_version >= "3.8"' 'colorama>=0.3.4; sys_platform == "win32"' 'freezegun==1.1.0; python_version < "3.8"' 'freezegun==1.2.2; python_version >= "3.8"' 'mypy==v0.910; python_version < "3.6"' 'mypy==v0.971; python_version >= "3.6" and python_version < "3.7"' 'mypy==v0.990; python_version >= "3.7"' 'pre-commit==3.0.2; python_version >= "3.8"' 'pytest-cov==2.12.1; python_version < "3.8"' 'pytest-cov==4.0.0; python_version >= "3.8"' 'pytest-mypy-plugins==1.10.1; python_version >= "3.8"' 'pytest-mypy-plugins==1.9.3; python_version >= "3.6" and python_version < "3.8"' 'pytest==6.1.2; python_version < "3.8"' 'pytest==7.2.1; python_version >= "3.8"' 'sphinx-autobuild==2021.3.14; python_version >= "3.8"' 'sphinx-rtd-theme==1.1.1; python_version >= "3.8"' 'tox==3.27.1; python_version < "3.8"' 'tox==4.4.4; python_version >= "3.8"' 'win32-setctime>=1.0.0; sys_platform == "win32"'
lint: install_package> python -I -m pip install --force-reinstall --no-deps /home/glacier/repos/loguru/.tox/.tmp/package/1/loguru-0.6.0.tar.gz
lint: commands[0]> pre-commit run --show-diff-on-failure --all-files
[INFO] Initializing environment for https://github.com/pre-commit/pre-commit-hooks.
[INFO] Initializing environment for https://github.com/macisamuele/language-formatters-pre-commit-hooks.
[INFO] Initializing environment for https://github.com/pycqa/isort.
[INFO] Initializing environment for https://github.com/ambv/black.
[INFO] Initializing environment for https://github.com/pycqa/flake8.
[INFO] Initializing environment for https://github.com/pycqa/flake8:flake8-bugbear==23.1.20,pep8-naming==0.13.3.
[INFO] Installing environment for https://github.com/pre-commit/pre-commit-hooks.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/macisamuele/language-formatters-pre-commit-hooks.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/pycqa/isort.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/ambv/black.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/pycqa/flake8.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
fix end of files.........................................................Passed
trim trailing whitespace.................................................Passed
check for added large files..............................................Passed
Pretty format INI........................................................Passed
Pretty format YAML.......................................................Passed
isort....................................................................Passed
black....................................................................Passed
flake8...................................................................Passed
lint: OK âœ” in 31.1 seconds
tests: install_package_deps> python -I -m pip install 'Sphinx==5.3.0; python_version >= "3.8"' 'aiocontextvars>=0.2.0; python_version < "3.7"' 'colorama==0.4.5; python_version < "3.8"' 'colorama==0.4.6; python_version >= "3.8"' 'colorama>=0.3.4; sys_platform == "win32"' 'freezegun==1.1.0; python_version < "3.8"' 'freezegun==1.2.2; python_version >= "3.8"' 'mypy==v0.910; python_version < "3.6"' 'mypy==v0.971; python_version >= "3.6" and python_version < "3.7"' 'mypy==v0.990; python_version >= "3.7"' 'pre-commit==3.0.2; python_version >= "3.8"' 'pytest-cov==2.12.1; python_version < "3.8"' 'pytest-cov==4.0.0; python_version >= "3.8"' 'pytest-mypy-plugins==1.10.1; python_version >= "3.8"' 'pytest-mypy-plugins==1.9.3; python_version >= "3.6" and python_version < "3.8"' 'pytest==6.1.2; python_version < "3.8"' 'pytest==7.2.1; python_version >= "3.8"' 'sphinx-autobuild==2021.3.14; python_version >= "3.8"' 'sphinx-rtd-theme==1.1.1; python_version >= "3.8"' 'tox==3.27.1; python_version < "3.8"' 'tox==4.4.4; python_version >= "3.8"' 'win32-setctime>=1.0.0; sys_platform == "win32"'
tests: install_package> python -I -m pip install --force-reinstall --no-deps /home/glacier/repos/loguru/.tox/.tmp/package/2/loguru-0.6.0.tar.gz
tests: commands[0]> coverage erase
tests: commands[1]> pytest --cov loguru/ --cov-report=
================================================= test session starts ==================================================
platform linux -- Python 3.9.12, pytest-7.2.1, pluggy-1.0.0
cachedir: .tox/tests/.pytest_cache
rootdir: /home/glacier/repos/loguru, configfile: tox.ini, testpaths: tests
plugins: cov-4.0.0, mypy-plugins-1.10.1
collected 1472 items

tests/test_activation.py ..............................                                                          [  2%]
tests/test_add_option_backtrace.py .                                                                             [  2%]
tests/test_add_option_catch.py ...........                                                                       [  2%]
tests/test_add_option_colorize.py ....................ssssssssssss.................ss.....                       [  6%]
tests/test_add_option_diagnose.py .                                                                              [  6%]
tests/test_add_option_enqueue.py ............s                                                                   [  7%]
tests/test_add_option_filter.py .......................................................                          [ 11%]
tests/test_add_option_format.py ....................                                                             [ 12%]
tests/test_add_option_kwargs.py .......                                                                          [ 13%]
tests/test_add_option_level.py ..........                                                                        [ 13%]
tests/test_add_option_serialize.py .........                                                                     [ 14%]
tests/test_add_sinks.py .......................................................                                  [ 18%]
tests/test_ansimarkup_basic.py ................................................................................. [ 23%]
.......                                                                                                          [ 24%]
tests/test_ansimarkup_extended.py .............................................................................. [ 29%]
..............                                                                                                   [ 30%]
tests/test_bind.py .........                                                                                     [ 31%]
tests/test_configure.py ................                                                                         [ 32%]
tests/test_contextualize.py ..............                                                                       [ 33%]
tests/test_coroutine_sink.py ...............................                                                     [ 35%]
tests/test_datetime.py ................................                                                          [ 37%]
tests/test_deepcopy.py ....                                                                                      [ 37%]
tests/test_defaults.py .............                                                                             [ 38%]
tests/test_exceptions_catch.py ..................................................                                [ 41%]
tests/test_exceptions_formatting.py ............................................................................ [ 47%]
                                                                                                                 [ 47%]
tests/test_filesink_compression.py ......................................................                        [ 50%]
tests/test_filesink_delay.py ..........                                                                          [ 51%]
tests/test_filesink_permissions.py ..........                                                                    [ 52%]
tests/test_filesink_retention.py .................................................                               [ 55%]
tests/test_filesink_rotation.py ................................................................................ [ 60%]
.sss.......................................                                                                      [ 63%]
tests/test_filesink_watch.py ..............                                                                      [ 64%]
tests/test_formatting.py ...............................................................................         [ 70%]
tests/test_get_frame.py ...                                                                                      [ 70%]
tests/test_interception.py ............                                                                          [ 71%]
tests/test_levels.py ................................................                                            [ 74%]
tests/test_locks.py .....                                                                                        [ 74%]
tests/test_multiprocessing.py ............................                                                       [ 76%]
tests/test_opt.py .............................................................................................. [ 83%]
........................................................                                                         [ 86%]
tests/test_parse.py .........................                                                                    [ 88%]
tests/test_patch.py ........                                                                                     [ 89%]
tests/test_pickling.py .....................................................                                     [ 92%]
tests/test_propagation.py ......                                                                                 [ 93%]
tests/test_recattr.py .........                                                                                  [ 93%]
tests/test_remove.py ...........                                                                                 [ 94%]
tests/test_repr.py ....................                                                                          [ 95%]
tests/test_standard_handler.py ................                                                                  [ 96%]
tests/test_threading.py .....                                                                                    [ 97%]
tests/test_type_hinting.py .                                                                                     [ 97%]
tests/typesafety/test_logger.yml ........................................                                        [100%]

===================================== 1454 passed, 18 skipped in 88.36s (0:01:28) ======================================
tests: commands[2]> coverage report -m
Name                           Stmts   Miss  Cover   Missing
------------------------------------------------------------
loguru/__init__.py                11      0   100%
loguru/_asyncio_loop.py           16      7    56%   15-22
loguru/_better_exceptions.py     300      0   100%
loguru/_colorama.py               37      7    81%   32, 44-49, 53-55
loguru/_colorizer.py             262      0   100%
loguru/_contextvars.py             9      1    89%   8
loguru/_ctime_functions.py        38     16    58%   6-20, 24-30
loguru/_datetime.py               44      0   100%
loguru/_defaults.py               49      0   100%
loguru/_error_interceptor.py      26      0   100%
loguru/_file_sink.py             299      0   100%
loguru/_filters.py                18      0   100%
loguru/_get_frame.py              16      0   100%
loguru/_handler.py               215      0   100%
loguru/_locks_machinery.py        29      4    86%   7-11
loguru/_logger.py                509      2    99%   105, 788
loguru/_recattrs.py               48      0   100%
loguru/_simple_sinks.py           83      0   100%
loguru/_string_parsers.py        109      0   100%
------------------------------------------------------------
TOTAL                           2118     37    98%
tests: commands[3]> coverage xml
Wrote XML report to coverage.xml
tests: OK âœ” in 1 minute 38.99 seconds
docs: install_package_deps> python -I -m pip install 'Sphinx==5.3.0; python_version >= "3.8"' 'aiocontextvars>=0.2.0; python_version < "3.7"' 'colorama==0.4.5; python_version < "3.8"' 'colorama==0.4.6; python_version >= "3.8"' 'colorama>=0.3.4; sys_platform == "win32"' 'freezegun==1.1.0; python_version < "3.8"' 'freezegun==1.2.2; python_version >= "3.8"' 'mypy==v0.910; python_version < "3.6"' 'mypy==v0.971; python_version >= "3.6" and python_version < "3.7"' 'mypy==v0.990; python_version >= "3.7"' 'pre-commit==3.0.2; python_version >= "3.8"' 'pytest-cov==2.12.1; python_version < "3.8"' 'pytest-cov==4.0.0; python_version >= "3.8"' 'pytest-mypy-plugins==1.10.1; python_version >= "3.8"' 'pytest-mypy-plugins==1.9.3; python_version >= "3.6" and python_version < "3.8"' 'pytest==6.1.2; python_version < "3.8"' 'pytest==7.2.1; python_version >= "3.8"' 'sphinx-autobuild==2021.3.14; python_version >= "3.8"' 'sphinx-rtd-theme==1.1.1; python_version >= "3.8"' 'tox==3.27.1; python_version < "3.8"' 'tox==4.4.4; python_version >= "3.8"' 'win32-setctime>=1.0.0; sys_platform == "win32"'
docs: install_package> python -I -m pip install --force-reinstall --no-deps /home/glacier/repos/loguru/.tox/.tmp/package/3/loguru-0.6.0.tar.gz
docs: commands[0]> sphinx-build -a -b html -W --keep-going docs/ docs/build
Running Sphinx v5.3.0
loading translations [English]... not available for built-in messages
making output directory... done
loading intersphinx inventory from https://docs.python.org/3/objects.inv...
building [mo]: all of 0 po files
building [html]: all source files
updating environment: [new config] 13 added, 0 changed, 0 removed
reading sources... [100%] resources/recipes
looking for now-outdated files... none found
pickling environment... done
checking consistency... done
preparing documents... done
writing output... [100%] resources/recipes
generating indices... genindex py-modindex done
highlighting module code... [100%] loguru._logger
writing additional pages... search done
copying static files... done
copying extra files... done
dumping search index in English (code: en)... done
dumping object inventory... done
build succeeded.

The HTML pages are in docs/build.
.pkg: _exit> python /home/glacier/repos/loguru/venv/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
  lint: OK (31.10=setup[11.71]+cmd[19.39] seconds)
  tests: OK (98.99=setup[9.55]+cmd[0.07,89.01,0.16,0.20] seconds)
  docs: OK (11.53=setup[9.71]+cmd[1.82] seconds)
  congratulations :) (141.66 seconds)
